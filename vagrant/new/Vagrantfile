# Requiered plugins
# -*- mode: ruby -*-
# vi: set ft=ruby :
rootPath = File.dirname(__FILE__)
require 'yaml'
require "#{rootPath}/dependency.rb"

# Load yaml configuration
vConfig = YAML.load_file("#{rootPath}/config.yaml")

# Check plugin
check_plugins ['vagrant-vbguest','vagrant-hostsupdater']
if OS.is_windows
    check_plugins ['vagrant-winnfsd']
end

hostDirectory = "magento/"
guestDirectory = "/var/www/magento"


# Vagrant configure
Vagrant.configure("2") do |config|
    # Virtual machine
    config.vm.box = vConfig['vmconf']['box']

    # Host manager configuration
    config.vm.network :private_network, ip: vConfig['vmconf']['network_ip']

    # VBox config
    config.vm.provider 'virtualbox' do |v|
    # Basic Settings
    v.name = vConfig['vmconf']['machine_name']
    v.memory = vConfig['vmconf']['memory']
    v.cpus = vConfig['vmconf']['cpus']

    # Use multiple CPUs in VM
    v.customize ['modifyvm', :id, '--ioapic', 'on']

    # WINDOWS
    # Enable symlink
    # v.customize ['setextradata', :id, 'VBoxInternal2/SharedFoldersEnableSymlinksCreate/var/www/', '1']

    # Uncomment option below to avoid issues with VirtualBox on Windows 10
    # v.gui=true
    end

    # Virtualhosts
    config.vm.hostname = vConfig['magento']['url']
    config.hostsupdater.aliases = vConfig['magento']['url_aliases'].split(" ")

    # Default options
    config.vm.synced_folder '.', '/vagrant', disabled: true

    config.vm.synced_folder './provision', '/vagrant/provision', create: true
    config.vm.synced_folder './tools', '/vagrant/tools', create: true
    config.vm.synced_folder './magento', '/var/www/magento', type: "nfs", mount_options: ['rw', 'tcp', 'fsc', 'actimeo=2', 'nolock']

    # Extra provisionner
    process_extra_file(config, 'extra/001-env.sh')
    process_extra_file(config, 'extra/100-pre-build.sh')
    process_extra_file(config, 'extra/120-post-build.sh')

    # Environment provisioning
    config.vm.provision 'shell', path: 'provision/env.sh', run: 'always', keep_color: true, args: [
        vConfig['db']['name'], vConfig['db']['user'], vConfig['db']['password'],
        vConfig['server']['php_version'], vConfig['server']['time_zone'],
        vConfig['server']['php_debug_fpm_ip'], vConfig['server']['php_debug_cli_ip'],
        vConfig['server']['site_folder'], vConfig['magento']['url'], vConfig['magento']['url_aliases'],
        vConfig['composer']['magento']['username'], vConfig['composer']['magento']['password'],
        vConfig['magento']['install'], vConfig['magento']['version'], vConfig['magento']['edition'],
        vConfig['magento']['mode'], vConfig['magento']['sample'], vConfig['magento']['language'],
        vConfig['magento']['currency'], vConfig['magento']['time_zone']
    ]

    config.vm.provision 'shell', path: 'provision/setup.sh', keep_color: true
    config.vm.provision 'shell', path: 'provision/configure.sh', keep_color: true
    config.vm.provision 'shell', path: 'provision/magento.sh', keep_color: true, privileged: false
    config.vm.provision 'shell', path: 'provision/finalizing.sh', keep_color: true, privileged: false

    config.trigger.after :up do |trigger|
        #trigger.info = "Starting mutagen..."
        #trigger.run = {path: "provision/bin/mutagen_start.sh", args: [vConfig['vmconf']['machine_name'], vConfig['vmconf']['network_ip'], vConfig['server']['site_folder']]}
        trigger.info = "Restarting nginx..."
        trigger.run_remote = {inline: "sudo service nginx restart"}
    end

        #config.trigger.before :destroy, :halt do |trigger|
        #trigger.info = "Stopping mutagen..."
        #trigger.run = {path: "provision/bin/mutagen_stop.sh", args: [vConfig['vmconf']['machine_name'], vConfig['vmconf']['network_ip'], vConfig['server']['site_folder']]}
    #end
end
